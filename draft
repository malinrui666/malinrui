def xor_distance(node_id_a: str, node_id_b: str) -> int:
    """
    Calculates the XOR distance between two node IDs.
    Parameters node_id_a and node_id_b are binary strings, e.g., '000000000000...00110000'
    Returns the XOR distance as an integer.
    """
    # Convert binary strings to integers
    int_a = int(node_id_a, 2)
    int_b = int(node_id_b, 2)
    
    # Compute XOR
    xor_result = int_a ^ int_b
    return xor_result


# Example Node IDs (only the last 16 bits shown; total should be 160 bits)
# We pad the first 144 bits with zeros to make it 160 bits
node_id_a = '0' * 144 + '00110000'  # Last 8 bits: 0011 0000
node_id_b = '0' * 144 + '01000000'  # Last 8 bits: 0100 0000

# Calculate XOR distance
distance = xor_distance(node_id_a, node_id_b)

# Print result in binary and decimal
print(f"XOR Distance (binary): {bin(distance)}")
print(f"XOR Distance (decimal): {distance}")
